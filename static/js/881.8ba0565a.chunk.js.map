{"version":3,"file":"static/js/881.8ba0565a.chunk.js","mappings":"mOACA,EAA4B,0BAA5B,EAA6O,qBAA7O,EAA8S,sBAA9S,EAA2U,qBAA3U,EAA2W,yB,SCiD3W,EA7Ce,WACX,IAAMA,GAAYC,EAAAA,EAAAA,MAClB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAYH,EAAOI,IAAI,SACxBD,IACLE,EAAAA,EAAAA,IAASF,GAAWG,MAAK,SAAAC,GACrB,IAAOC,EAAQD,EAARC,KACP,GAA4B,IAAxBA,EAAKC,QAAQC,OACb,OAAOC,MAAM,kCAAD,OAAmCR,IAEnDL,EAASU,EAAKC,QAAS,GAC9B,GAAE,CAACT,IAcJ,OAAO,iBAAKY,UAAWC,EAAhB,WACH,kBAAMC,SATO,SAAAC,GAEb,GADAA,EAAEC,iBACmB,KAAjBrB,EAAMsB,OACN,OAAON,MAAM,gCAEjBV,EAAU,CAAEN,MAAOA,GACtB,EAGG,WACI,kBAAOuB,SAdE,SAAAH,GACbnB,EAASmB,EAAEI,OAAOC,MACrB,EAYkCC,KAAK,UAChC,mBAAQA,KAAK,SAAb,wBAEJ,eAAIT,UAAWC,EAAf,SACKhB,EAAMyB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,KAA3B,OACX,eAAId,UAAWC,EAAf,UACI,UAAC,KAAD,CAAMD,UAAWC,EAAcc,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMrC,GAAnE,WACA,gBAAKoB,UAAWC,EAAWiB,IAAG,yCAAoCL,GAAeM,IAAKP,KACrF,wBAAKA,GAASE,QAHWH,EADnB,QAStB,C","sources":["webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Movies_container__+-Cnt\",\"img\":\"Movies_img__8sw1H\",\"films\":\"Movies_films__7HvCq\",\"contain\":\"Movies_contain__+zRvl\",\"about\":\"Movies_about__mh1zU\",\"link\":\"Movies_link__MzAfU\",\"text\":\"Movies_text__FlKVm\",\"list\":\"Movies_list__hqYjd\",\"linkCast\":\"Movies_linkCast__OT7fj\",\"image\":\"Movies_image__vvLaG\",\"item\":\"Movies_item__Ba4aJ\",\"linkFilm\":\"Movies_linkFilm__kdqij\"};","import { ApiQuery } from '../../components/Api';\nimport { useState, useEffect } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n    const locations = useLocation()\n    const [query, setQuery] = useState('')\n    const [movie, setMovie] = useState([])\n    const [params, setParams] = useSearchParams()\n\n    useEffect(() => {\n        const movieName = params.get('query')\n        if (!movieName) return\n        ApiQuery(movieName).then(resp => {\n            const {data} = resp;\n            if (data.results.length === 0) {\n                return alert(`No Movies found with that name ${movieName}`)\n            }\n            setMovie(data.results)})\n    }, [params])\n\n    const onChange = e => {\n        setQuery(e.target.value);\n    }\n\n    const onSubmit = e => {\n        e.preventDefault()\n        if (query.trim() === '') {\n            return alert('Input value can not be empty');\n          }\n        setParams({ query: query })\n    }\n \n    return <div className={css.container}>\n        <form onSubmit={onSubmit}>\n            <input onChange={onChange} type=\"text\" />\n            <button type=\"submit\">Search</button>\n        </form>\n        <ul className={css.list}>\n            {movie.map(({ id, title, poster_path, name}) => \n            <li className={css.item} key={id} >\n                <Link className={css.linkFilm} to={`/movies/${id}`} state={{ from: locations }}>\n                <img className={css.image} src={`https://image.tmdb.org/t/p/w300${poster_path}`} alt={title} />\n                 <h3>{title || name}</h3>   \n                </Link>\n            </li>)}\n        </ul>\n    </div>\n}\nexport default Movies\n\n"],"names":["locations","useLocation","useState","query","setQuery","movie","setMovie","useSearchParams","params","setParams","useEffect","movieName","get","ApiQuery","then","resp","data","results","length","alert","className","css","onSubmit","e","preventDefault","trim","onChange","target","value","type","map","id","title","poster_path","name","to","state","from","src","alt"],"sourceRoot":""}